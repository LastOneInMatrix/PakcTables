{"version":3,"sources":["Components/Common/Button/Button.module.scss","Components/Common/InputField/InputField.module.scss","Components/Common/Headings/Headings.module.scss","Components/Common/StylizedСomponents/AuthModal/AuthModal.module.scss","Components/Common/Preloader/Preloader.module.scss","App/App.module.scss","Components/Login/Login.module.scss","reportWebVitals.ts","API/LoginAPI/loginAPI.ts","API/AuthAPI/authAPI.ts","App/appReducer.ts","Components/Login/loginReduser.ts","App/store.ts","Components/Common/Headings/H1.tsx","Components/Common/Headings/H2.tsx","Components/Common/StylizedСomponents/AuthModal/AuthModal.tsx","Components/Common/InputField/InputField.tsx","Components/Common/Button/Button.tsx","Assets/image/loader.svg","Components/Common/Preloader/Preloader.tsx","Components/Login/Login.tsx","App/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","loginAPI","data","post","authAPI","initialState","status","isInitialized","error","actionsForApp","type","_id","avatar","email","isAdmin","name","publicCardPacksCount","rememberMe","verified","updated","created","isLoggedIn","token","tokenDeathTime","__v","actionsForLogin","value","rootReducer","combineReducers","app","state","action","login","console","log","store","createStore","applyMiddleware","thunk","window","H1","title","className","s","H2","children","subtitle","AuthModal","props","style","container","container__body","InputField","onChange","onChangeText","onKeyPress","onEnter","spanClassName","label","restProps","finalSpanClassName","finalInputClassName","input","input__error","inputField","aria-required","e","currentTarget","key","inputField__error","Button","color","rounded","width","widthBtn","finalClassName","button","button__rounded","button__default","button__blue","button__light_blue","button__red","Preloader","React","memo","isFetching","src","preloader","alt","overlay","Login","useState","password","setData","emailValid","passwordValid","formErrors","errors","setErrors","useSelector","dispatch","useDispatch","validate","test","length","to","PATH","TEST_PACK","onSubmit","a","res","response","message","preventDefault","onBlur","target","button_block","disabled","textAlign","TEST_LOGIN","TEST_PAGE404","App","useEffect","wrapper","exact","path","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.78c2bb10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3b-PE\",\"button__rounded\":\"Button_button__rounded___n0uV\",\"button__default\":\"Button_button__default__Sgt4d\",\"button__blue\":\"Button_button__blue__IgKeH\",\"button__light_blue\":\"Button_button__light_blue__3IzCL\",\"button__red\":\"Button_button__red__h2og3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"InputField_inputField__NweHs\",\"inputField__error\":\"InputField_inputField__error__2Sa9l\",\"input\":\"InputField_input__2f8kY\",\"input__error\":\"InputField_input__error__2UHd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Headings_title__2cTOs\",\"subtitle\":\"Headings_subtitle__108pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthModal_container__2MITy\",\"container__body\":\"AuthModal_container__body__1RPDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isFetching\":\"Preloader_isFetching__hFt4u\",\"overlay\":\"Preloader_overlay__3JDbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1P655\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_block\":\"Login_button_block__1aYS0\",\"checkbox_block\":\"Login_checkbox_block__1Iy-Y\",\"bottom\":\"Login_bottom__3vxGA\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\n\r\n// instance\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n});\r\n\r\n\r\n// api\r\nexport const loginAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data).then(data => data.data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type LoginType = {\r\n    email: string\r\n    password: string\r\n};\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: Date\r\n    __v: number\r\n};\r\ntype ErrorType = { error?: string };\r\nexport type LoginResponseType = UserDataType & ErrorType;","import {instance, LoginResponseType} from '../LoginAPI/loginAPI';\r\n\r\n\r\n// api\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>(\"auth/me\", {});\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutType>(\"auth/me\", {});\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type LogoutType = {\r\n    info: string\r\n    error: string\r\n};\r\nexport type UpdateUserDataType = {\r\n    name: string\r\n    avatar: string\r\n};\r\n\r\n\r\n","import {AppRootStateType, CommonActionTypeForApp, InferActionType} from \"./store\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {authAPI} from \"../API/AuthAPI/authAPI\";\r\n\r\n\r\nconst initialState = {\r\n    status: \"idle\",\r\n    isInitialized: false,\r\n    error: null,\r\n} as AppInitialStateType;\r\n\r\nexport const appReducer =\r\n    (state: InitialAppStateType = initialState, action: CommonActionTypeForApp): InitialAppStateType => {\r\n        switch (action.type) {\r\n            case \"TEST-PROJECT/ROOT/APP/SET-STATUS\":\r\n                return {...state, status: action.status};\r\n            case \"TEST-PROJECT/ROOT/APP/IS-INITIALIZED\":\r\n                return {...state, isInitialized: action.isInitialized};\r\n            case \"TEST-PROJECT/ROOT/APP/SET-ERROR\":\r\n                return {...state, error: action.error};\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForApp = {\r\n    setAppStatus: (status: StatusType) => ({type: \"TEST-PROJECT/ROOT/APP/SET-STATUS\", status} as const),\r\n    setAppError: (error: string | null) => ({type: \"TEST-PROJECT/ROOT/APP/SET-ERROR\", error} as const),\r\n    setIsInitialized: (isInitialized: boolean) => ({\r\n        type: \"TEST-PROJECT/ROOT/APP/IS-INITIALIZED\",\r\n        isInitialized\r\n    } as const),\r\n};\r\n\r\n\r\n// thunks\r\nexport const initializeApp = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        await authAPI.me();\r\n        dispatch(actionsForApp.setIsInitialized(true));\r\n        dispatch(actionsForApp.setAppStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(actionsForApp.setIsInitialized(true));\r\n        dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n        const error = e.response.data.error === 'you are not authorized /ᐠ-ꞈ-ᐟ\\\\'\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console')\r\n        dispatch(actionsForApp.setAppError(error));\r\n        dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n    }\r\n};\r\n\r\n\r\n// types\r\nexport type InitialAppStateType = typeof initialState;\r\nexport type AppActionType = InferActionType<typeof actionsForApp>;\r\nexport type AppInitialStateType = {\r\n    status: StatusType\r\n    isInitialized: boolean\r\n    error: string | null\r\n    isWrongPath: boolean\r\n};\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, CommonActionTypeForApp>;\r\nexport type ThunkDispatchType = ThunkDispatch<AppRootStateType, unknown, CommonActionTypeForApp>;\r\n\r\n","import {loginAPI, LoginResponseType, LoginType, UserDataType} from \"../../API/LoginAPI/loginAPI\";\r\nimport {CommonActionTypeForApp, InferActionType} from \"../../App/store\";\r\nimport {actionsForApp, ThunkDispatchType, ThunkType} from \"../../App/appReducer\";\r\n\r\nconst initialState = {\r\n    _id: '',\r\n    avatar: '',\r\n    email: '',\r\n    isAdmin: false,\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    rememberMe: false,\r\n    verified: false,\r\n    updated: {},\r\n    created: {},\r\n    isLoggedIn: false,\r\n    token: '',\r\n    tokenDeathTime: {},\r\n    __v: 0,\r\n} as UserDataDomainType;\r\n\r\nexport const loginReducer =\r\n    (state: InitialAuthStateType = initialState, action: CommonActionTypeForApp): InitialAuthStateType => {\r\n        switch (action.type) {\r\n            case \"TEST-PROJECT/ROOT/LOGIN/SET-IS-LOGGED-IN\":\r\n                return {...state, isLoggedIn: action.value};\r\n            case \"TEST-PROJECT/ROOT/LOGIN/GET-USER\":\r\n                console.log(action.data)\r\n                return {\r\n                    ...state,\r\n                    ...action.data,\r\n                    __v: 0,\r\n                    isLoggedIn: true,\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForLogin = {\r\n    setIsLoggedIn: (value: boolean) => ({type: \"TEST-PROJECT/ROOT/LOGIN/SET-IS-LOGGED-IN\", value} as const),\r\n    getUser: (data: LoginResponseType) => ({type: \"TEST-PROJECT/ROOT/LOGIN/GET-USER\", data} as const),\r\n};\r\n\r\n\r\n// thunks\r\nexport const login = (data: LoginType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n        let res = await loginAPI.login(data);\r\n        dispatch(actionsForLogin.setIsLoggedIn(true));\r\n        dispatch(actionsForApp.setAppStatus(\"succeeded\"));\r\n        dispatch(actionsForLogin.getUser(res));\r\n    } catch (e: any) {\r\n        dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(actionsForApp.setAppError(error))\r\n    }\r\n};\r\n\r\n\r\n\r\n// types\r\nexport type UserDataDomainType = UserDataType & { isLoggedIn: boolean };\r\nexport type InitialAuthStateType = typeof initialState;\r\nexport type LoginActionType = InferActionType<typeof actionsForLogin>;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {AppActionType, appReducer} from \"./appReducer\";\r\nimport {LoginActionType, loginReducer} from \"../Components/Login/loginReduser\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\nexport type CommonActionTypeForApp = AppActionType | LoginActionType\r\n\r\nexport type InferActionType<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n// @ts-ignore\r\nwindow.store = store;","import React from \"react\";\r\nimport s from \"./Headings.module.scss\";\r\n\r\ntype H1PropsType = {\r\n    title?: string;\r\n}\r\n\r\n\r\nexport const H1: React.FC<H1PropsType> = ({title}) => {\r\n\r\n    return <h1 className={s.title}>{title || \"TEST\"}</h1>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Headings.module.scss\";\r\n\r\n\r\n\r\nexport const H2: React.FC = ({children}) => {\r\n\r\n   return <h2 className={s.subtitle}>{children}</h2>\r\n}\r\n","import React from \"react\";\r\nimport style from \"./AuthModal.module.scss\";\r\nimport {H1} from \"../../Headings/H1\";\r\nimport {H2} from \"../../Headings/H2\";\r\n\r\ntype AuthModalPropsType = {\r\n    title?: string;\r\n    subtitle: string\r\n}\r\n\r\n\r\nexport const AuthModal: React.FC<AuthModalPropsType> = (props) => {\r\n    const {children, title, subtitle} = props\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.container__body}>\r\n                <H1 title={title}/>\r\n                <H2>{subtitle}</H2>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./InputField.module.scss\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputFieldPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n    label?: string\r\n}\r\n\r\n\r\nexport const InputField: React.FC<InputFieldPropsType> =  (\r\n    {\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        label,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error && s.input__error}`\r\n\r\n    return (\r\n        <div className={s.inputField}>\r\n            <label aria-required={true}>{label}</label>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            <div className={s.inputField__error}>{error && <span className={finalSpanClassName}>{error}</span>}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.scss'\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    color: 'dark-blue' | 'light-blue' | 'red'\r\n    rounded: boolean\r\n    width?: string | number | undefined\r\n}\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        color,\r\n        className,\r\n        children,\r\n        rounded,\r\n        width,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const widthBtn = {\r\n        width: width\r\n    }\r\n\r\n    const finalClassName = ` ${s.button} ${rounded ? s.button__rounded : s.button__default} \r\n    ${color === 'dark-blue' ? s.button__blue : color === 'light-blue' ? s.button__light_blue : s.button__red}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            style={widthBtn}\r\n            {...restProps}\r\n        >\r\n            <span>{children}</span>\r\n        </button>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loader.67c2c9a0.svg\";","import React from \"react\";\r\nimport style from \"./Preloader.module.scss\";\r\nimport preloader from \"../../../Assets/image/loader.svg\";\r\n\r\n\r\nexport const Preloader = React.memo(() => {\r\n\r\n    return (\r\n        <>\r\n            <div className={style.isFetching}>\r\n                <img src={preloader} alt={'loading spinner'}/>\r\n                <div className={style.overlay}/>\r\n            </div>\r\n        </>\r\n    )\r\n})","import React, {FocusEvent, FormEvent, useState} from \"react\";\r\nimport style from \"./Login.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../App/store\";\r\nimport {PATH} from \"../../App/App\";\r\nimport {login} from \"./loginReduser\";\r\nimport {StatusType} from \"../../App/appReducer\";\r\nimport {AuthModal} from \"../Common/StylizedСomponents/AuthModal/AuthModal\";\r\nimport {InputField} from \"../Common/InputField/InputField\";\r\nimport {Button} from \"../Common/Button/Button\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nexport const Login: React.FC = React.memo(() => {\r\n\r\n    const [data, setData] = useState({email: '', password: '', rememberMe: false});\r\n    const [errors, setErrors] = useState({\r\n        emailValid: false,\r\n        passwordValid: false,\r\n        formErrors: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n    });\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn);\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n\r\n\r\n    const validate = (e: FocusEvent<HTMLInputElement>) => {\r\n        switch (e.currentTarget.type) {\r\n            case \"email\":\r\n                if (!e.currentTarget.value) {\r\n                    setErrors({...errors, emailValid: true, formErrors: {...errors.formErrors, email: \"Required\"}});\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.currentTarget.value)) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        emailValid: true,\r\n                        formErrors: {...errors.formErrors, email: \"Invalid email address\"}\r\n                    });\r\n                }\r\n                break;\r\n            case \"password\":\r\n                if (!e.currentTarget.value) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        passwordValid: true,\r\n                        formErrors: {...errors.formErrors, password: \"Required\"},\r\n                    });\r\n                } else if (e.currentTarget.value.length < 6) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        passwordValid: true,\r\n                        formErrors: {...errors.formErrors, password: \"Invalid password, minimum length 8 characters\"},\r\n                    });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        dispatch(login(data));\r\n        e.preventDefault(); //что-бы не перезагружал страницу\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.TEST_PACK}/>\r\n    }\r\n\r\n    return (\r\n        <AuthModal subtitle={'Sign In'} title={'TablesTest'}>\r\n            {status === 'loading' && <Preloader/>}\r\n            <form onSubmit={handleSubmit}>\r\n                <InputField\r\n                    label={'Email'}\r\n                    type={'email'}\r\n                    value={data.email}\r\n                    onBlur={e => validate(e)}\r\n                    onChange={e => setData({...data, email: e.target.value})}\r\n                    error={errors.emailValid ? errors.formErrors.email : null}\r\n                />\r\n\r\n                <InputField\r\n                    label={'Password'}\r\n                    type=\"password\"\r\n                    onBlur={e => validate(e)}\r\n                    value={data.password}\r\n                    onChange={e => setData({...data, password: e.target.value})}\r\n                    error={errors.passwordValid ? errors.formErrors.password : null}\r\n                />\r\n                <div className={style.button_block}>\r\n                    <Button\r\n                        color='dark-blue'\r\n                        rounded\r\n                        // type={\"submit\"}\r\n                        disabled={status === \"loading\"}\r\n                    >Login</Button>\r\n                    <pre style={{textAlign: 'center'}}>{error}</pre>\r\n                </div>\r\n            </form>\r\n        </AuthModal>\r\n    );\r\n})\r\n","import React, {useEffect} from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport style from \"./App.module.scss\";\nimport {Login} from \"../Components/Login/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {initializeApp} from \"./appReducer\";\nimport {AppRootStateType} from \"./store\";\n\nexport const PATH = {\n    TEST_LOGIN: '/login',\n    TEST_PAGE404: '/page404',\n    TEST_PACK: '/pack'\n}\n\nfunction App() {\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn);\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [dispatch]);\n    return (\n        <div className={style.wrapper}>\n            <Switch>\n                <Route exact path={\"/\"} render={() => <Login/>}/>\n                <Route exact path={PATH.TEST_LOGIN} render={() => <Login/>}/>\n                <Redirect from={'*'} to={PATH.TEST_PAGE404}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./App/store\";\nimport './index.scss';\nimport App from './App/App';\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}