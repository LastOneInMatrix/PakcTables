{"version":3,"sources":["components/common/Button/Button.module.scss","components/common/Modal/Modal.module.scss","style/global.module.scss","components/common/InputField/InputField.module.scss","components/common/Error/Error.module.scss","components/common/Headings/Headings.module.scss","components/v8-PacksPage/Pack/TablePackList/TablePackList.module.scss","components/common/StylizedСomponents/AuthModal/AuthModal.module.scss","components/common/Preloader/Preloader.module.scss","app/App.module.scss","components/v2-Login/Login.module.scss","components/v8-PacksPage/Pack/Pack.module.scss","components/common/Pagination/Pagination.module.scss","reportWebVitals.ts","api/login-api/loginAPI.ts","api/auth-api/authAPI.ts","app/appReducer.ts","components/v2-Login/loginReduser.ts","api/pack-api/packAPI.ts","components/utills/error-utils/ErrorUtils.ts","components/common/Pagination/paginationPackReduser.ts","components/v8-PacksPage/packReduser.ts","components/common/StateOfMyPackSortDate/StateOfMyPackSortDateReduser.ts","app/store.ts","components/v5-Page_404/pag404Reduser.ts","components/common/Headings/H1.tsx","components/common/Headings/H2.tsx","components/common/StylizedСomponents/AuthModal/AuthModal.tsx","components/common/InputField/InputField.tsx","components/common/Button/Button.tsx","components/common/Error/Error.tsx","assets/image/loader.svg","components/common/Preloader/Preloader.tsx","components/v2-Login/Login.tsx","components/common/StylizedСomponents/Wrapper/Wrapper.tsx","components/common/Modal/Modal.tsx","components/v8-PacksPage/Pack/TablePackList/TablePackList.tsx","hook/usePagination.tsx","components/common/Pagination/Pagination.tsx","components/common/Pagination/PaginationWrapper.tsx","components/v8-PacksPage/Pack/Pack.tsx","components/v8-PacksPage/PacksPage.tsx","app/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","loginAPI","data","post","authAPI","initialState","status","isInitialized","error","isWrongPath","actionsForApp","type","_id","avatar","email","isAdmin","name","publicCardPacksCount","rememberMe","verified","updated","created","isLoggedIn","token","tokenDeathTime","__v","actionsForLogin","value","packAPI","id","delete","params","cardsPack","put","get","packName","min","max","sortPacks","page","pageCount","user_id","handleError","dispatch","response","message","cardPacksTotalCount","actionsForPackPagination","val","actionsForPack","title","pack","myPackState","sortState","dateState","minRange","maxRange","sortValue","actionsForStateOfMyPackSortDate","flag","rootReducer","combineReducers","app","state","action","login","page404","filter","p","firstProperty","secondProperty","map","first","second","paginationPack","StateOfMyPackSortDate","store","createStore","applyMiddleware","thunk","window","H1","className","s","H2","children","subtitle","AuthModal","props","style","container","container__body","InputField","onChange","onChangeText","onKeyPress","onEnter","spanClassName","label","restProps","finalSpanClassName","finalInputClassName","input","input__error","inputField","aria-required","e","currentTarget","key","inputField__error","Button","color","rounded","width","widthBtn","finalClassName","button","button__rounded","button__default","button__blue","button__light_blue","button__red","Error","errorMessage","errorClassName","error_block__visible","error_block__hidden","error_icon","error_message","Preloader","React","memo","isFetching","src","preloader","alt","overlay","Login","useState","password","setData","emailValid","passwordValid","formErrors","errors","setErrors","useSelector","useDispatch","useEffect","setTimeout","clearTimeout","validate","test","length","to","PATH","TEST_PACK","onSubmit","a","res","preventDefault","onBlur","target","button_block","disabled","Wrapper","global","Modal","modalActive","setModalActive","modal","modal__active","onClick","modal__content","modal__content_active","stopPropagation","TablePackList","me","deleteModalActive","setDeleteModalActive","deletePackId","setDeletePackId","editModalActive","setEditModalActive","editPackName","setEditPackName","editOrDeleteValue","setEditOrDeleteValue","table","table__block","col1","containerArrows3","arrows","arrowsUp","arrowsDown","col2","containerArrows2","col3","containerArrows","col4","col5","t","cardsCount","slice","user_name","btn","table__modal","modal__btn","packId","DOTS","range","start","end","Array","from","_","idx","Pagination","currentPage","totalCount","pageSize","siblingCount","setPackPage","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","classnames","paginationContainer","paginationItem","arrow","left","pageNumber","dots","selected","right","PaginationWrapper","setPackPageCount","paginationWrapperContainer","paginationSelectContainer","paginationSpan","defaultValue","pagginationSelect","Pack","height","PacksPage","userId","flagForMyPack","flagSortData","flagSortValueData","sortFlag","undefined","cardPacks","TEST_LOGIN","App","wrapper","exact","path","render","TEST_PAGE404","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.955f0a46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1_oAc\",\"button__rounded\":\"Button_button__rounded__h_akG\",\"button__default\":\"Button_button__default__1QTha\",\"button__blue\":\"Button_button__blue__bBZZO\",\"button__light_blue\":\"Button_button__light_blue__eyk3w\",\"button__red\":\"Button_button__red__2kiya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__VKzC2\",\"modal__active\":\"Modal_modal__active__Oh_yW\",\"modal__content\":\"Modal_modal__content__wCDX1\",\"modal__content_active\":\"Modal_modal__content_active__2vE0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"global_container__3lw1N\",\"pack\":\"global_pack__3nj0U\",\"modal__btn\":\"global_modal__btn__qHOml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"InputField_inputField__2WyZf\",\"inputField__error\":\"InputField_inputField__error__3m3ih\",\"input\":\"InputField_input__2Q6n-\",\"input__error\":\"InputField_input__error__35bha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_block__visible\":\"Error_error_block__visible__2P61a\",\"moveInLeft\":\"Error_moveInLeft__hWWx4\",\"error_block__hidden\":\"Error_error_block__hidden__3-4ZY\",\"error_icon\":\"Error_error_icon__2d_3p\",\"error_message\":\"Error_error_message__38XqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Headings_title__37f1g\",\"subtitle\":\"Headings_subtitle__3wOfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TablePackList_table__bHGKB\",\"table__block\":\"TablePackList_table__block__2VtGu\",\"table__modal\":\"TablePackList_table__modal__3I9pv\",\"btn\":\"TablePackList_btn__1jaOX\",\"col1\":\"TablePackList_col1__3YNYC\",\"col2\":\"TablePackList_col2__3q0_A\",\"col3\":\"TablePackList_col3__1J-Z1\",\"containerArrows\":\"TablePackList_containerArrows__dAFbY\",\"arrows\":\"TablePackList_arrows__3iNmD\",\"arrowsUp\":\"TablePackList_arrowsUp__1KL9L\",\"arrowsDown\":\"TablePackList_arrowsDown__5l7Nn\",\"containerArrows2\":\"TablePackList_containerArrows2__u_vr9\",\"containerArrows3\":\"TablePackList_containerArrows3__zFUWg\",\"col4\":\"TablePackList_col4__1VuPg\",\"col5\":\"TablePackList_col5__mxIA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthModal_container__3Rupv\",\"container__body\":\"AuthModal_container__body__3rjzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isFetching\":\"Preloader_isFetching__2hH3s\",\"overlay\":\"Preloader_overlay__1nrbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2PwwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_block\":\"Login_button_block__3S_Fy\",\"checkbox_block\":\"Login_checkbox_block__f0Fz9\",\"bottom\":\"Login_bottom__3B7uB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"Pack_pack__2BTg-\",\"pack__inputBlock\":\"Pack_pack__inputBlock__3-BIW\",\"pack__modal\":\"Pack_pack__modal__127Bg\",\"pack__btn\":\"Pack_pack__btn__1OHo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationWrapperContainer\":\"Pagination_paginationWrapperContainer__3ayv4\",\"paginationContainer\":\"Pagination_paginationContainer__3z2ol\",\"paginationItem\":\"Pagination_paginationItem__2qJCR\",\"dots\":\"Pagination_dots__2QLjA\",\"selected\":\"Pagination_selected__1zfsY\",\"arrow\":\"Pagination_arrow__3WKnb\",\"left\":\"Pagination_left__35uLK\",\"right\":\"Pagination_right__5SH8Z\",\"disabled\":\"Pagination_disabled__Dzg0r\",\"paginationSelectContainer\":\"Pagination_paginationSelectContainer__3cE7q\",\"paginationSpan\":\"Pagination_paginationSpan__1cyl7\",\"pagginationSelect\":\"Pagination_pagginationSelect__mxIVb\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\n\r\n// instance\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true,\r\n});\r\n\r\n\r\n// api\r\nexport const loginAPI = {\r\n    login(data: LoginType) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n};\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: Date\r\n    __v: number\r\n};\r\ntype ErrorType = { error?: string };\r\nexport type LoginResponseType = UserDataType & ErrorType;","import {instance, LoginResponseType, UserDataType} from \"../login-api/loginAPI\";\r\n\r\n\r\n// api\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>(\"auth/me\", {});\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutType>(\"auth/me\", {});\r\n    },\r\n    updateUserData(data: UpdateUserDataType) {\r\n        return instance.put<UpdateUserDataResponseType>(\"auth/me\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type LogoutType = {\r\n    info: string\r\n    error: string\r\n};\r\nexport type UpdateUserDataType = {\r\n    name: string\r\n    avatar: string\r\n};\r\ntype UpdateUserDataResponseType = {\r\n    updatedUser: UserDataType\r\n    error?: string\r\n};\r\n\r\n","import {AppRootStateType, CommonActionTypeForApp, InferActionType} from \"./store\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {authAPI} from \"../api/auth-api/authAPI\";\r\n\r\n\r\nconst initialState = {\r\n    status: \"idle\",\r\n    isInitialized: false,\r\n    error: null,\r\n    isWrongPath: false\r\n} as AppInitialStateType;\r\n\r\nexport const appReducer =\r\n    (state: InitialAppStateType = initialState, action: CommonActionTypeForApp): InitialAppStateType => {\r\n        switch (action.type) {\r\n            case \"PET-PROJECT/ROOT/APP/SET-STATUS\":\r\n                return {...state, status: action.status};\r\n            case \"PET-PROJECT/ROOT/APP/IS-INITIALIZED\":\r\n                return {...state, isInitialized: action.isInitialized};\r\n            case \"PET-PROJECT/ROOT/APP/SET-ERROR\":\r\n                return {...state, error: action.error};\r\n            case \"PET-PROJECT/ROOT/APP/IS-WRONG-PATH\":\r\n                return {...state, isWrongPath: action.isWrongPath}\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForApp = {\r\n    setAppStatus: (status: StatusType) => ({type: \"PET-PROJECT/ROOT/APP/SET-STATUS\", status} as const),\r\n    setAppError: (error: string | null) => ({type: \"PET-PROJECT/ROOT/APP/SET-ERROR\", error} as const),\r\n    setIsInitialized: (isInitialized: boolean) => ({\r\n        type: \"PET-PROJECT/ROOT/APP/IS-INITIALIZED\",\r\n        isInitialized\r\n    } as const),\r\n    setIsWrongPath: (isWrongPath: boolean) => ({\r\n        type: \"PET-PROJECT/ROOT/APP/IS-WRONG-PATH\",\r\n        isWrongPath\r\n    } as const)\r\n};\r\n\r\n\r\n// thunks\r\nexport const initializeApp = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        await authAPI.me();\r\n        dispatch(actionsForApp.setIsInitialized(true));\r\n    } catch (e: any) {\r\n        dispatch(actionsForApp.setIsInitialized(true));\r\n        dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n        const error = e.response.data.error === 'you are not authorized /ᐠ-ꞈ-ᐟ\\\\'\r\n            ? null\r\n            : e.response.data.error\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n        dispatch(actionsForApp.setAppError(error));\r\n    }\r\n};\r\n\r\n\r\n// types\r\nexport type InitialAppStateType = typeof initialState;\r\nexport type AppActionType = InferActionType<typeof actionsForApp>;\r\nexport type AppInitialStateType = {\r\n    status: StatusType\r\n    isInitialized: boolean\r\n    error: string | null\r\n    isWrongPath: boolean\r\n};\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, CommonActionTypeForApp>;\r\nexport type ThunkDispatchType = ThunkDispatch<AppRootStateType, unknown, CommonActionTypeForApp>;\r\n\r\n","import {loginAPI, LoginResponseType, LoginType, UserDataType} from \"../../api/login-api/loginAPI\";\r\nimport {CommonActionTypeForApp, InferActionType} from \"../../app/store\";\r\nimport {authAPI, UpdateUserDataType} from \"../../api/auth-api/authAPI\";\r\nimport {actionsForApp, ThunkDispatchType, ThunkType} from \"../../app/appReducer\";\r\n\r\nconst initialState = {\r\n    _id: '',\r\n    avatar: '',\r\n    email: '',\r\n    isAdmin: false,\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    rememberMe: false,\r\n    verified: false,\r\n    updated: {},\r\n    created: {},\r\n    isLoggedIn: false,\r\n    token: '',\r\n    tokenDeathTime: {},\r\n    __v: 0,\r\n} as UserDataDomainType;\r\n\r\nexport const loginReducer =\r\n    (state: InitialAuthStateType = initialState, action: CommonActionTypeForApp): InitialAuthStateType => {\r\n        switch (action.type) {\r\n            case \"PET-PROJECT/ROOT/LOGIN/SET-IS-LOGGED-IN\":\r\n                return {...state, isLoggedIn: action.value};\r\n            case \"PET-PROJECT/ROOT/LOGIN/UPDATE-USER-DATA\":\r\n                return {...state,};\r\n            case \"PET-PROJECT/ROOT/LOGIN/GET-USER\":\r\n                return {\r\n                    ...state,\r\n                    name: action.data.name,\r\n                    avatar: action.data.avatar,\r\n                    email: action.data.email,\r\n                    _id: action.data._id,\r\n                    isAdmin: action.data.isAdmin,\r\n                    publicCardPacksCount: action.data.publicCardPacksCount,\r\n                    rememberMe: action.data.rememberMe,\r\n                    verified: action.data.verified,\r\n                    updated: action.data.updated,\r\n                    created: action.data.created,\r\n                    token: action.data.token,\r\n                    __v: 0,\r\n                    isLoggedIn: true,\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForLogin = {\r\n    setIsLoggedIn: (value: boolean) => ({type: \"PET-PROJECT/ROOT/LOGIN/SET-IS-LOGGED-IN\", value} as const),\r\n    updateUserData: (data: UpdateUserDataType) => ({type: \"PET-PROJECT/ROOT/LOGIN/UPDATE-USER-DATA\", data} as const),\r\n    getUser: (data: LoginResponseType) => ({type: \"PET-PROJECT/ROOT/LOGIN/GET-USER\", data} as const),\r\n};\r\n\r\n\r\n// thunks\r\nexport const login = (data: LoginType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n        let res = await loginAPI.login(data);\r\n        dispatch(actionsForLogin.setIsLoggedIn(true));\r\n        dispatch(actionsForApp.setAppStatus(\"succeeded\"));\r\n        dispatch(actionsForLogin.getUser(res.data));\r\n    } catch (e: any) {\r\n        dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(actionsForApp.setAppError(error))\r\n    }\r\n};\r\nexport const logout = (): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n        await authAPI.logout();\r\n        dispatch(actionsForApp.setAppStatus(\"succeeded\"));\r\n        dispatch(actionsForLogin.setIsLoggedIn(false));\r\n        dispatch(actionsForApp.setIsInitialized(true));\r\n    } catch (e: any) {\r\n        dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(actionsForApp.setAppError(error))\r\n    }\r\n};\r\n\r\n\r\n// types\r\nexport type UserDataDomainType = UserDataType & { isLoggedIn: boolean };\r\nexport type InitialAuthStateType = typeof initialState;\r\nexport type LoginActionType = InferActionType<typeof actionsForLogin>;","import {instance} from \"../login-api/loginAPI\";\r\n\r\n\r\n// api\r\nexport const packAPI = {\r\n    createNewCardsPack(cardsPack: NewCardsPackType) {\r\n        return instance.post<{}>(\"cards/pack\", {cardsPack});\r\n    },\r\n    removeCardsPack(id: string) {\r\n        return instance.delete<{}>(\"cards/pack\", {params: {id}});\r\n    },\r\n    updateCardsPackData(cardsPack: UpdatedPackDataType) {\r\n        return instance.put<{}>(\"cards/pack\", {cardsPack});\r\n    },\r\n    getCardsPack(data: RequestGetCardsPackType) {\r\n        return instance.get<ResponseCardsPackType>(\"cards/pack\", {\r\n            params: {\r\n                packName: data.packName,\r\n                min: data.min,\r\n                max: data.max,\r\n                sortPacks: data.sortPacks,\r\n                page: data.page,\r\n                pageCount: data.pageCount,\r\n                user_id: data.user_id,\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type NewCardsPackType = {\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: \"pack\" | \"folder\"\r\n};\r\nexport type UpdatedPackDataType = {\r\n    _id: string\r\n    name?: string\r\n};\r\nexport type RequestGetCardsPackType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n};\r\nexport type CardsPackType = {\r\n    \"_id\": string\r\n    \"user_id\": string\r\n    \"user_name\": string\r\n    \"private\": boolean\r\n    \"name\": string\r\n    \"path\": string\r\n    \"grade\": number\r\n    \"shots\": number\r\n    \"cardsCount\": number\r\n    \"type\": \"pack\" | \"folder\"\r\n    \"rating\": number\r\n    \"created\": string\r\n    \"updated\": string\r\n    \"more_id\": string\r\n    \"__v\": number\r\n};\r\nexport type ResponseCardsPackType = {\r\n    cardPacks: CardsPackType[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\n\r\n","import {CommonActionTypeForApp} from \"../../../app/store\";\r\nimport {actionsForApp} from \"../../../app/appReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport const handleError = (error: ErrorType, dispatch: Dispatch<CommonActionTypeForApp>) => {\r\n    dispatch(actionsForApp.setAppStatus(\"failed\"));\r\n    dispatch(actionsForApp.setAppError(error.response\r\n        ? error.response.data.error\r\n        : (error.message + ', more details in the console')));\r\n};\r\nexport type ErrorType = {\r\n    response: {\r\n        data: {\r\n            error: string\r\n        }\r\n    },\r\n    message: string\r\n};","import {ResponseCardsPackType} from \"../../../api/pack-api/packAPI\";\r\nimport {CommonActionTypeForApp, InferActionType} from \"../../../app/store\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    pageCount: 5,\r\n    page: 1,\r\n    cardPacksTotalCount: 10\r\n} as ResponseCardsPackType;\r\n\r\nexport const paginationPackReducer =\r\n    (state: InitialPaginationStateType = initialState, action: CommonActionTypeForApp): InitialPaginationStateType => {\r\n        switch (action.type) {\r\n            case \"PROJECT/ROOT/PAGINATION/SET-PACK-TOTAL-COUNT\":\r\n                return {...state, cardPacksTotalCount: action.val}\r\n            case \"PROJECT/ROOT/PAGINATION/SET-PACK-PAGE\":\r\n                return {...state, page: action.val}\r\n            case \"PROJECT/ROOT/PAGINATION/SET-PACK-PAGE-COUNT\":\r\n                return {...state, pageCount: action.val}\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForPackPagination = {\r\n\r\n    setPackTotalCount: (val: number) => ({\r\n        type: \"PROJECT/ROOT/PAGINATION/SET-PACK-TOTAL-COUNT\",\r\n        val\r\n    } as const),\r\n    setPackPage: (val: number) => ({\r\n        type: \"PROJECT/ROOT/PAGINATION/SET-PACK-PAGE\",\r\n        val\r\n    } as const),\r\n    setPackPageCount: (val: number) => ({\r\n        type: \"PROJECT/ROOT/PAGINATION/SET-PACK-PAGE-COUNT\",\r\n        val\r\n    } as const)\r\n\r\n};\r\n\r\n\r\n\r\n// types\r\nexport type InitialPaginationStateType = typeof initialState;\r\nexport type PaginationActionPackType = InferActionType<typeof actionsForPackPagination>;\r\n\r\n","import {CommonActionTypeForApp, InferActionType} from \"../../app/store\";\r\nimport {actionsForApp, ThunkDispatchType, ThunkType} from \"../../app/appReducer\";\r\nimport {\r\n    CardsPackType,\r\n    NewCardsPackType,\r\n    packAPI,\r\n    RequestGetCardsPackType,\r\n    UpdatedPackDataType\r\n} from \"../../api/pack-api/packAPI\";\r\nimport {handleError} from \"../utills/error-utils/ErrorUtils\";\r\nimport {actionsForPackPagination} from \"../common/Pagination/paginationPackReduser\";\r\n\r\n\r\nconst initialState = [] as PackDomainType[];\r\n\r\nexport const packReducer =\r\n    (state: InitialPackStateType = initialState, action: CommonActionTypeForApp): InitialPackStateType => {\r\n        switch (action.type) {\r\n            case \"PROJECT/ROOT/PACK/REMOVE-PACK\":\r\n                return state.filter(p => p._id !== action.id);\r\n            case \"PROJECT/ROOT/PACK/CREATE-PACK\":\r\n                return [{...action.pack, firstProperty: 1, secondProperty: 2}, ...state];\r\n            case \"PROJECT/ROOT/PACK/UPDATE-PACK-TITLE\":\r\n                return state.map( p => p._id === action.id ? {...p, title: action.title} : p);\r\n            case \"PROJECT/ROOT/PACK/SET-PACK-LISTS\":\r\n                return action.pack.map((p) => ({...p, firstProperty: 1, secondProperty: 2}));\r\n            case \"PROJECT/ROOT/PACK/UPDATE-PACK-FIRST-PROPERTY\":\r\n                return state.map( p => p._id === action.id ? {...p, firstProperty: action.first} : p);\r\n            case \"PROJECT/ROOT/PACK/UPDATE-PACK-SECOND-PROPERTY\":\r\n                return state.map( p => p._id === action.id ? {...p, filter: action.second} : p);\r\n            case \"PROJECT/ROOT/PACK/CLEAR-DATA\":\r\n                return initialState;\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForPack = {\r\n    removePack:  (id: string) => ({\r\n        type: \"PROJECT/ROOT/PACK/REMOVE-PACK\",\r\n        id,\r\n    } as const ),\r\n    createPack: (pack: CardsPackType) => ({\r\n        type: \"PROJECT/ROOT/PACK/CREATE-PACK\",\r\n        pack,\r\n    } as const),\r\n    updatePackTitle: (id: string, title?: string) => ({\r\n        type: \"PROJECT/ROOT/PACK/UPDATE-PACK-TITLE\",\r\n        id,\r\n        title,\r\n    } as const),\r\n    setPackLists: (pack: CardsPackType[]) => ({\r\n        type: \"PROJECT/ROOT/PACK/SET-PACK-LISTS\",\r\n        pack\r\n    } as const),\r\n    updatePackFirstProperty: (id: string, first: any) => ({\r\n        type: \"PROJECT/ROOT/PACK/UPDATE-PACK-FIRST-PROPERTY\",\r\n        id,\r\n        first,\r\n    } as const),\r\n    updatePackSecondProperty: (id: string, second: any) => ({\r\n        type: \"PROJECT/ROOT/PACK/UPDATE-PACK-SECOND-PROPERTY\",\r\n        id,\r\n        second,\r\n    } as const),\r\n    clearData: () => ({\r\n        type: \"PROJECT/ROOT/PACK/CLEAR-DATA\"\r\n    } as const),\r\n};\r\n\r\n\r\n// thunks\r\nexport const fetchPack = (data: RequestGetCardsPackType): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n        let res = await packAPI.getCardsPack(data);\r\n        dispatch(actionsForPack.setPackLists(res.data.cardPacks));\r\n        dispatch(actionsForPackPagination.setPackTotalCount(res.data.cardPacksTotalCount))\r\n        dispatch(actionsForApp.setAppStatus(\"succeeded\"));\r\n    } catch(e: any) {\r\n        handleError(e, dispatch);\r\n    }\r\n};\r\n\r\nexport const removePack = (packId: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n        await packAPI.removeCardsPack(packId);\r\n        dispatch(actionsForPack.removePack(packId));\r\n        dispatch(actionsForApp.setAppStatus(\"idle\"));\r\n    } catch(e: any) {\r\n        handleError(e, dispatch);\r\n    }\r\n};\r\n\r\nexport const createPack = (dataForNewPack: NewCardsPackType, dataForRequest: RequestGetCardsPackType)\r\n        : ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n        await packAPI.createNewCardsPack(dataForNewPack);\r\n        let res = await packAPI.getCardsPack(dataForRequest);\r\n        dispatch(actionsForPack.setPackLists(res.data.cardPacks));\r\n        dispatch(actionsForApp.setAppStatus(\"succeeded\"));\r\n    } catch(e: any) {\r\n        handleError(e, dispatch);\r\n    }\r\n};\r\n\r\nexport const updatePackTitle = (data: UpdatedPackDataType): ThunkType =>\r\n    async (dispatch: ThunkDispatchType) => {\r\n        try {\r\n            dispatch(actionsForApp.setAppStatus(\"loading\"));\r\n            await packAPI.updateCardsPackData(data);\r\n            dispatch(actionsForPack.updatePackTitle(data._id, data.name));\r\n            dispatch(actionsForApp.setAppStatus(\"idle\"));\r\n        } catch(e: any) {\r\n            handleError(e, dispatch);\r\n        }\r\n    };\r\n\r\n\r\n// types\r\nexport type InitialPackStateType = typeof initialState;\r\nexport type PackActionType = InferActionType<typeof actionsForPack>;\r\n\r\nexport type PackDomainType = CardsPackType & {\r\n    firstProperty: any\r\n    secondProperty: any\r\n\r\n};","import {InferActionType} from \"../../../app/store\";\r\n\r\n\r\nexport let sortValue = '0updated' || '1updated' as const\r\n\r\nconst initialState = {\r\n    myPackState: false,\r\n    sortState: false,\r\n    dateState: false,\r\n    minRange: 1,\r\n    maxRange: 200,\r\n    sortValue: '0updated'\r\n} as initialStateType;\r\n\r\nexport const StateOfMyPackSortDateReduser =\r\n    (state: StateOfMyPackSortDateType = initialState, action: StateOfMyPackSortDateActionType): StateOfMyPackSortDateType => {\r\n        switch (action.type) {\r\n                case \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/SORT\":\r\n                return {...state, sortState : action.flag}\r\n                case \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/DATA\":\r\n                return {...state, dateState : action.flag}\r\n                case \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/SORT-VALUE\":\r\n                return {...state, sortValue : action.value}\r\n                case \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/MIN-RANGE\":\r\n                return {...state, minRange : action.value}\r\n                case \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/MAX-RANGE\":\r\n                return {...state, maxRange : action.value}\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n\r\n// actions\r\nexport const actionsForStateOfMyPackSortDate = {\r\n    setFlagSort: (flag: boolean) => ({\r\n        type: \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/SORT\",\r\n        flag\r\n    } as const),\r\n    setFlagData: (flag: boolean) => ({\r\n        type: \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/DATA\",\r\n        flag\r\n    } as const),\r\n    setSortValue: (value: typeof sortValue) => ({\r\n        type: \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/SORT-VALUE\",\r\n        value\r\n    } as const),\r\n    setMinRange: (value: number) => ({\r\n        type: \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/MIN-RANGE\",\r\n        value\r\n    } as const),\r\n    setMaxRange: (value: number) => ({\r\n        type: \"PROJECT/ROOT/UTILLS/STATE-OF-MYPACK-SORT-DATA/MAX-RANGE\",\r\n        value\r\n    } as const),\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\n// types\r\ntype initialStateType = {\r\n    myPackState: boolean\r\n    sortState: boolean\r\n    dateState: boolean\r\n    minRange: number\r\n    maxRange: number\r\n    sortValue: typeof sortValue\r\n}\r\nexport type StateOfMyPackSortDateType = initialStateType;\r\nexport type StateOfMyPackSortDateActionType = InferActionType<typeof actionsForStateOfMyPackSortDate>;\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {page404Reduser} from \"../components/v5-Page_404/pag404Reduser\";\r\nimport {LoginActionType, loginReducer} from \"../components/v2-Login/loginReduser\";\r\nimport {AppActionType, appReducer} from \"./appReducer\";\r\nimport {PackActionType, packReducer} from \"../components/v8-PacksPage/packReduser\";\r\nimport {\r\n    PaginationActionPackType,\r\n    paginationPackReducer\r\n} from \"../components/common/Pagination/paginationPackReduser\";\r\nimport {\r\n    StateOfMyPackSortDateActionType,\r\n    StateOfMyPackSortDateReduser\r\n} from \"../components/common/StateOfMyPackSortDate/StateOfMyPackSortDateReduser\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    page404: page404Reduser,\r\n    pack: packReducer,\r\n    paginationPack: paginationPackReducer,\r\n    StateOfMyPackSortDate: StateOfMyPackSortDateReduser\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport type CommonActionTypeForApp = LoginActionType | AppActionType\r\n   | PackActionType\r\n   | PaginationActionPackType | StateOfMyPackSortDateActionType;\r\n\r\nexport type InferActionType<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","export const page404Reduser = (state = {}, action: any) => {\r\n    return state\r\n}","import React from \"react\";\r\nimport s from \"./Headings.module.scss\";\r\n\r\ntype H1PropsType = {\r\n    title?: string;\r\n}\r\n\r\n\r\nexport const H1: React.FC<H1PropsType> = ({title}) => {\r\n\r\n    return <h1 className={s.title}>{title || \"Magic card\"}</h1>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Headings.module.scss\";\r\n\r\n\r\n\r\nexport const H2: React.FC = ({children}) => {\r\n\r\n   return <h2 className={s.subtitle}>{children}</h2>\r\n}\r\n","import React from \"react\";\r\nimport style from \"./AuthModal.module.scss\";\r\nimport {H1} from \"../../Headings/H1\";\r\nimport {H2} from \"../../Headings/H2\";\r\n\r\ntype AuthModalPropsType = {\r\n    title?: string;\r\n    subtitle: string\r\n}\r\n\r\n\r\nexport const AuthModal: React.FC<AuthModalPropsType> = (props) => {\r\n    const {children, title, subtitle} = props\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.container__body}>\r\n                <H1 title={title}/>\r\n                <H2>{subtitle}</H2>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./InputField.module.scss\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputFieldPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n    label?: string\r\n}\r\n\r\n\r\nexport const InputField: React.FC<InputFieldPropsType> =  (\r\n    {\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        label,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error && s.input__error}`\r\n\r\n    return (\r\n        <div className={s.inputField}>\r\n            <label aria-required={true}>{label}</label>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            <div className={s.inputField__error}>{error && <span className={finalSpanClassName}>{error}</span>}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.scss'\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    color: 'dark-blue' | 'light-blue' | 'red'\r\n    rounded: boolean\r\n    width?: string | number | undefined\r\n}\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        color,\r\n        className,\r\n        children,\r\n        rounded,\r\n        width,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const widthBtn = {\r\n        width: width\r\n    }\r\n\r\n    const finalClassName = ` ${s.button} ${rounded ? s.button__rounded : s.button__default} \r\n    ${color === 'dark-blue' ? s.button__blue : color === 'light-blue' ? s.button__light_blue : s.button__red}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            style={widthBtn}\r\n            {...restProps}\r\n        >\r\n            <span>{children}</span>\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./Error.module.scss\";\r\n\r\ntype ErrorPropsType = {\r\n    errorMessage: string | null\r\n}\r\n\r\nexport const Error: React.FC<ErrorPropsType> = ({errorMessage}) => {\r\n    let errorClassName = errorMessage ? style.error_block__visible : style.error_block__hidden;\r\n\r\n    return (\r\n        <div className={errorClassName}>\r\n            <span className={style.error_icon}>!</span>\r\n            <span className={style.error_message}>{errorMessage ? errorMessage : null}</span>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.67c2c9a0.svg\";","import React from \"react\";\r\nimport style from \"./Preloader.module.scss\";\r\nimport preloader from \"../../../assets/image/loader.svg\";\r\n\r\n\r\nexport const Preloader = React.memo(() => {\r\n\r\n    return (\r\n        <>\r\n            <div className={style.isFetching}>\r\n                <img src={preloader} alt={'loading spinner'}/>\r\n                <div className={style.overlay}/>\r\n            </div>\r\n        </>\r\n    )\r\n})","import React, {FocusEvent, FormEvent, useEffect, useState} from \"react\";\r\nimport style from \"./Login.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {PATH} from \"../../app/App\";\r\nimport {login} from \"./loginReduser\";\r\nimport {actionsForApp, StatusType} from \"../../app/appReducer\";\r\nimport {AuthModal} from \"../common/StylizedСomponents/AuthModal/AuthModal\";\r\nimport {InputField} from \"../common/InputField/InputField\";\r\nimport {Button} from \"../common/Button/Button\";\r\nimport {Error} from \"../common/Error/Error\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\n\r\nexport const Login: React.FC = React.memo(() => {\r\n\r\n    const [data, setData] = useState({email: '', password: '', rememberMe: false});\r\n    const [errors, setErrors] = useState({\r\n        emailValid: false,\r\n        passwordValid: false,\r\n        formErrors: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n    });\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn);\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const id = setTimeout(() => {\r\n            dispatch(actionsForApp.setAppError(\"\"));\r\n        }, 5000);\r\n\r\n        return () => {\r\n            clearTimeout(id)\r\n        };\r\n    });\r\n\r\n\r\n    const validate = (e: FocusEvent<HTMLInputElement>) => {\r\n        switch (e.currentTarget.type) {\r\n            case \"email\":\r\n                if (!e.currentTarget.value) {\r\n                    setErrors({...errors, emailValid: true, formErrors: {...errors.formErrors, email: \"Required\"}});\r\n                } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.currentTarget.value)) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        emailValid: true,\r\n                        formErrors: {...errors.formErrors, email: \"Invalid email address\"}\r\n                    });\r\n                }\r\n                break;\r\n            case \"password\":\r\n                if (!e.currentTarget.value) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        passwordValid: true,\r\n                        formErrors: {...errors.formErrors, password: \"Required\"},\r\n                    });\r\n                } else if (e.currentTarget.value.length < 6) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        passwordValid: true,\r\n                        formErrors: {...errors.formErrors, password: \"Invalid password, minimum length 8 characters\"},\r\n                    });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        dispatch(login(data));\r\n        e.preventDefault();\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.TEST_PACK}/>\r\n    }\r\n\r\n    return (\r\n        <AuthModal subtitle={'Sign In'}>\r\n            {status === 'loading' && <Preloader/>}\r\n            <form onSubmit={handleSubmit}>\r\n                <InputField\r\n                    label={'Email'}\r\n                    type={'email'}\r\n                    value={data.email}\r\n                    onBlur={e => validate(e)}\r\n                    onChange={e => setData({...data, email: e.target.value})}\r\n                    error={errors.emailValid ? errors.formErrors.email : null}\r\n                />\r\n\r\n                <InputField\r\n                    label={'Password'}\r\n                    type=\"password\"\r\n                    onBlur={e => validate(e)}\r\n                    value={data.password}\r\n                    onChange={e => setData({...data, password: e.target.value})}\r\n                    error={errors.passwordValid ? errors.formErrors.password : null}\r\n                />\r\n\r\n\r\n                <Error errorMessage={error}/>\r\n                <div className={style.button_block}>\r\n                    <Button\r\n                        color='dark-blue'\r\n                        rounded\r\n                        type={\"submit\"}\r\n                        disabled={status === \"loading\"}\r\n                    >Login</Button>\r\n                </div>\r\n            </form>\r\n\r\n        </AuthModal>\r\n    );\r\n})\r\n","import React from \"react\";\r\nimport global from \"../../../../style/global.module.scss\";\r\n\r\n\r\nexport const Wrapper: React.FC = ({children}) => {\r\n\r\n   return <div className={global.container}>\r\n      <div className={global.pack}>\r\n         {children}\r\n      </div>\r\n   </div>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Modal.module.scss\";\r\n\r\ntype ModalPropsType = {\r\n   modalActive: boolean\r\n   setModalActive: (value: boolean) => void\r\n}\r\n\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({modalActive, setModalActive, children}) => {\r\n\r\n   return (\r\n      <div className={modalActive ? `${s.modal} ${s.modal__active}` : s.modal} onClick={() => setModalActive(false)}>\r\n         <div className={modalActive ? `${s.modal__content} ${s.modal__content_active}` : s.modal__content}\r\n              onClick={(e) => e.stopPropagation()}>\r\n            {children}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport s from \"./TablePackList.module.scss\";\r\nimport global from \"../../../../style/global.module.scss\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {PackDomainType, removePack, updatePackTitle} from \"../../packReduser\";\r\nimport {Button} from \"../../../common/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Modal} from \"../../../common/Modal/Modal\";\r\nimport {InputField} from \"../../../common/InputField/InputField\";\r\nimport {\r\n   actionsForStateOfMyPackSortDate,\r\n} from \"../../../common/StateOfMyPackSortDate/StateOfMyPackSortDateReduser\";\r\n\r\ntype TablePackListPropsType = {}\r\n\r\n\r\nexport const TablePackList: React.FC<TablePackListPropsType> = () => {\r\n\r\n   const me = useSelector<AppRootStateType, string>(state => state.login._id);\r\n   const pack = useSelector<AppRootStateType, PackDomainType[]>(state => state.pack);\r\n\r\n   const [deleteModalActive, setDeleteModalActive] = useState(false);\r\n   const [deletePackId, setDeletePackId] = useState({id: '', name: ''});\r\n\r\n   const [editModalActive, setEditModalActive] = useState(false);\r\n   const [editPackName, setEditPackName] = useState('');\r\n   const [editOrDeleteValue, setEditOrDeleteValue] = useState({id: '', name: ''});\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const deletePackHandler = () => {\r\n      dispatch(removePack(deletePackId.id));\r\n      setDeleteModalActive(false);\r\n   }\r\n   const deleteOpenModal = (id: string, name: string) => {\r\n      setDeletePackId({id, name});\r\n      setDeleteModalActive(true);\r\n   }\r\n\r\n\r\n   const saveEditPackHandler = () => {\r\n      dispatch(updatePackTitle({name: editPackName, _id: editOrDeleteValue.id}));\r\n      setEditModalActive(false);\r\n   }\r\n   const openEditModalHandler = (id: string, name: string) => {\r\n      setEditModalActive(true);\r\n      setEditOrDeleteValue({id, name});\r\n   }\r\n   const cancelEditModalHandler = () => {\r\n      setEditModalActive(false);\r\n      setEditPackName('');\r\n   }\r\n\r\n   return (\r\n      <div className={s.table}>\r\n         <table className={s.table__block}>\r\n            <thead>\r\n            <tr>\r\n               <th className={s.col1}>Name\r\n                  <div className={s.containerArrows3}>\r\n                     <div className={`${s.arrows} ${s.arrowsUp}`} onClick={()=>{\r\n                        dispatch(actionsForStateOfMyPackSortDate.setSortValue('0name'))\r\n                        dispatch(actionsForStateOfMyPackSortDate.setFlagData(true))\r\n                     }}></div>\r\n                     <div className={`${s.arrows} ${s.arrowsDown}`} onClick={()=>{\r\n                        dispatch(actionsForStateOfMyPackSortDate.setSortValue('1name'))\r\n                        dispatch(actionsForStateOfMyPackSortDate.setFlagData(true))\r\n                     }}></div>\r\n                  </div>\r\n               </th>\r\n               <th className={s.col2}>Cards\r\n                  <div className={s.containerArrows2}>\r\n                     <div className={`${s.arrows} ${s.arrowsUp}`} onClick={()=>{\r\n                        dispatch(actionsForStateOfMyPackSortDate.setSortValue('0cardsCount'))\r\n                        dispatch(actionsForStateOfMyPackSortDate.setFlagData(true))\r\n                     }}></div>\r\n                     <div className={`${s.arrows} ${s.arrowsDown}`} onClick={()=>{\r\n                        dispatch(actionsForStateOfMyPackSortDate.setSortValue('1cardsCount'))\r\n                        dispatch(actionsForStateOfMyPackSortDate.setFlagData(true))\r\n                     }}></div>\r\n                  </div>\r\n               </th>\r\n               <th className={s.col3}>Last Updated\r\n                  <div className={s.containerArrows}>\r\n                     <div className={`${s.arrows} ${s.arrowsUp}`} onClick={()=>{\r\n                        dispatch(actionsForStateOfMyPackSortDate.setSortValue('0updated'))\r\n                        dispatch(actionsForStateOfMyPackSortDate.setFlagData(true))\r\n                     }}></div>\r\n                     <div className={`${s.arrows} ${s.arrowsDown}`} onClick={()=>{\r\n                        dispatch(actionsForStateOfMyPackSortDate.setSortValue('1updated'))\r\n                        dispatch(actionsForStateOfMyPackSortDate.setFlagData(true))\r\n                     }}></div>\r\n                  </div>\r\n               </th>\r\n               <th className={s.col4}>Created by</th>\r\n               <th className={s.col5}>Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n               pack.map(t =>\r\n                  <tr key={t._id}>\r\n                     <th className={s.col1}>{t.name}</th>\r\n                     <th className={s.col2}>{t.cardsCount}</th>\r\n                     <th className={s.col3}>{(t.updated.slice(0, 10))}</th>\r\n                     <th className={s.col4}>{t.user_name}</th>\r\n                     <th className={`${s.col5} ${s.btn}`}>\r\n                        {me === t.user_id && <>\r\n                           <Button\r\n                              rounded={false}\r\n                              color='red'\r\n                              onClick={() => deleteOpenModal(t._id, t.name)}\r\n                           >Delete</Button>\r\n                           <Button\r\n                              rounded={false}\r\n                              color='light-blue'\r\n                              onClick={() => openEditModalHandler(t._id, t.name)}\r\n                           >Edit</Button>\r\n                        </>\r\n                        }\r\n                        <Link to={`/card/${t._id}`}><Button rounded={false} color='light-blue'>Learn</Button></Link>\r\n                     </th>\r\n                     <th>\r\n                     </th>\r\n                  </tr>\r\n               )\r\n            }\r\n            </tbody>\r\n         </table>\r\n         <Modal modalActive={editModalActive} setModalActive={setEditModalActive}>\r\n            <div className={s.table__modal}>\r\n               <h2>Edit Pack {editOrDeleteValue.name}</h2>\r\n               <hr/>\r\n               <InputField\r\n                  label='New name'\r\n                  value={editPackName}\r\n                  onChange={e => setEditPackName(e.currentTarget.value)}\r\n               />\r\n               <div className={global.modal__btn}>\r\n                  <Button\r\n                     width={120}\r\n                     rounded\r\n                     color='light-blue'\r\n                     onClick={cancelEditModalHandler}\r\n                  >Cancel</Button>\r\n                  <Button\r\n                     onClick={saveEditPackHandler}\r\n                     width={120}\r\n                     rounded\r\n                     color='dark-blue'\r\n                  >Save</Button>\r\n               </div>\r\n            </div>\r\n         </Modal>\r\n         <Modal modalActive={deleteModalActive} setModalActive={setDeleteModalActive}>\r\n            <div className={s.table__modal}>\r\n               <h2>Delete Pack</h2>\r\n               <hr/>\r\n               <p>Do you really want to remove <b>{deletePackId.name}</b>?</p>\r\n               <p>All cards will be excluded from this course.</p>\r\n               <div className={global.modal__btn}>\r\n                  <Button\r\n                     width={120}\r\n                     rounded\r\n                     color='light-blue'\r\n                     onClick={() => setDeleteModalActive(false)}\r\n                  >Cancel</Button>\r\n                  <Button\r\n                     onClick={deletePackHandler}\r\n                     width={120}\r\n                     rounded\r\n                     color='red'\r\n                  >Delete</Button>\r\n               </div>\r\n            </div>\r\n         </Modal>\r\n      </div>\r\n   )\r\n}\r\n","import {useMemo} from \"react\";\r\n\r\ntype usePaginationType = {\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n    siblingCount: number\r\n}\r\n\r\nexport const DOTS = ''\r\n\r\nconst range = (start: number, end: number) => {\r\n    let length = end - start + 1;\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n                                  currentPage,\r\n                                  totalCount,\r\n                                  siblingCount,\r\n                                  pageSize\r\n                              }: usePaginationType) => {\r\n    const paginationRange = useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            let leftItemCount = 3 + 2 * siblingCount;\r\n            let leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n\r\n            let rightItemCount = 3 + 2 * siblingCount;\r\n            let rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n        }\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n    return paginationRange;\r\n};","import React from 'react';\r\nimport classnames from './Pagination.module.scss';\r\nimport {usePagination, DOTS} from '../../../hook/usePagination';\r\n\r\ntype PaginationType = {\r\n    className?: string\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n    siblingCount: number\r\n    setPackPage: (value: number) => void\r\n}\r\n\r\nexport const Pagination = ({\r\n                               className,\r\n                               currentPage,\r\n                               totalCount,\r\n                               pageSize,\r\n                               siblingCount,\r\n                               setPackPage\r\n                           }: PaginationType) => {\r\n\r\n\r\n    const paginationRange = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize\r\n    });\r\n\r\n\r\n    if (paginationRange) {\r\n        if (currentPage === 0 || paginationRange.length < 2) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    const onNext = () => {\r\n        setPackPage(currentPage + 1)\r\n    };\r\n\r\n    const onPrevious = () => {\r\n        setPackPage(currentPage - 1)\r\n    };\r\n\r\n\r\n    // @ts-ignore\r\n    let lastPage = paginationRange[paginationRange.length - 1]\r\n\r\n\r\n    return (\r\n        <ul\r\n            className={classnames.paginationContainer}\r\n        >\r\n            {/* Left navigation arrow */}\r\n            <li\r\n                className={`${classnames.paginationItem} ${currentPage === 1 && classnames.disabled}`}\r\n                onClick={onPrevious}\r\n            >\r\n                <div className={`${classnames.arrow} ${classnames.left}`}/>\r\n            </li>\r\n            {paginationRange && paginationRange.map(pageNumber => {\r\n\r\n                // If the pageItem is a DOT, render the DOTS unicode character\r\n                if (pageNumber === DOTS) {\r\n                    return <li\r\n                        className={`${classnames.paginationItem} ${classnames.dots}`}>&#8230;</li>;\r\n                }\r\n\r\n                // Render our Page Pills\r\n                return (\r\n                    <li\r\n                        // key={+pageNumber}\r\n                        className={`${classnames.paginationItem} ${pageNumber === currentPage && classnames.selected}`}\r\n                        onClick={() =>\r\n                            setPackPage(+pageNumber)\r\n                        }\r\n                    >\r\n                        {pageNumber}\r\n                    </li>\r\n                );\r\n            })}\r\n            {/*  Right Navigation arrow */}\r\n            <li\r\n\r\n                className={`${classnames.paginationItem} ${currentPage === lastPage && classnames.disabled}`}\r\n                onClick={onNext}\r\n            >\r\n                <div className={`${classnames.arrow} ${classnames.right}`}/>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport style from \"./Pagination.module.scss\";\r\nimport {Pagination} from \"./Pagination\";\r\n\r\ntype PackPropsType = {\r\n    pageCount: number\r\n    currentPage: number\r\n    cardPacksTotalCount: number\r\n    setPackPageCount: (val: number) => void\r\n    setPackPage: (val: number) => void\r\n}\r\n\r\n\r\nexport const PaginationWrapper: React.FC<PackPropsType> = ({\r\n                                                               cardPacksTotalCount,\r\n                                                               currentPage,\r\n                                                               pageCount,\r\n                                                               setPackPageCount,\r\n                                                               setPackPage\r\n                                                           }) => {\r\n\r\n\r\n    return (\r\n        <div className={style.paginationWrapperContainer}>\r\n\r\n            <Pagination\r\n                className={''}\r\n                currentPage={currentPage}\r\n                totalCount={cardPacksTotalCount}\r\n                pageSize={pageCount}\r\n                siblingCount={1}\r\n                setPackPage={setPackPage}\r\n            />\r\n            <div className={style.paginationSelectContainer}>\r\n                <span className={style.paginationSpan}>Show</span>\r\n                <select\r\n                    defaultValue={pageCount}\r\n                    className={style.pagginationSelect}\r\n                    onChange={(e) =>\r\n                        setPackPageCount(+e.currentTarget.value)\r\n                    }>\r\n                    <option value={3}>3</option>\r\n                    <option value={5}>5</option>\r\n                    <option value={10}>10</option>\r\n                </select>\r\n                <span className={style.paginationSpan}>Cards per Page</span>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Pack.module.scss\";\r\nimport {TablePackList} from \"./TablePackList/TablePackList\";\r\nimport {PaginationWrapper} from \"../../common/Pagination/PaginationWrapper\";\r\n\r\ntype PackPropsType = {\r\n    pageCount: number\r\n    currentPage: number\r\n    cardPacksTotalCount: number\r\n    setPackPageCount: (val: number) => void\r\n    setPackPage: (val: number) => void\r\n\r\n}\r\n\r\nexport const Pack: React.FC<PackPropsType> = ({\r\n                                                  cardPacksTotalCount,\r\n                                                  currentPage,\r\n                                                  pageCount,\r\n                                                  setPackPage,\r\n                                                  setPackPageCount,\r\n                                              }) => {\r\n\r\n    return (\r\n        <div className={s.pack}>\r\n            <h1>Packs list</h1>\r\n            <PaginationWrapper\r\n                cardPacksTotalCount={cardPacksTotalCount}\r\n                currentPage={currentPage}\r\n                pageCount={pageCount}\r\n                setPackPageCount={setPackPageCount}\r\n                setPackPage={setPackPage}\r\n            />\r\n            <TablePackList/>\r\n            <div style={{height: 70}}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchPack} from \"./packReduser\";\r\nimport {Wrapper} from \"../common/StylizedСomponents/Wrapper/Wrapper\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../app/App\";\r\nimport {actionsForPackPagination} from \"../common/Pagination/paginationPackReduser\";\r\nimport {sortValue} from \"../common/StateOfMyPackSortDate/StateOfMyPackSortDateReduser\";\r\n\r\ntype PackPropsType = {}\r\n\r\n\r\nexport const PacksPage: React.FC<PackPropsType> = () => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn);\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.paginationPack.pageCount);\r\n    const currentPage = useSelector<AppRootStateType, number>(state => state.paginationPack.page);\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.paginationPack.cardPacksTotalCount);\r\n\r\n    const userId = useSelector<AppRootStateType, string>(state => state.login._id);\r\n    const flagForMyPack = useSelector<AppRootStateType, boolean>(state => state.StateOfMyPackSortDate.myPackState);\r\n    const flagSortData = useSelector<AppRootStateType, boolean>(state => state.StateOfMyPackSortDate.dateState);\r\n    const flagSortValueData = useSelector<AppRootStateType, typeof sortValue>(state => state.StateOfMyPackSortDate.sortValue);\r\n\r\n    const maxRange = useSelector<AppRootStateType, number>(state => state.StateOfMyPackSortDate.maxRange);\r\n    const minRange = useSelector<AppRootStateType, number>(state => state.StateOfMyPackSortDate.minRange);\r\n    const sortFlag = useSelector<AppRootStateType, boolean>(state => state.StateOfMyPackSortDate.sortState);\r\n\r\n    const setPackPage = (val: number) => {\r\n        dispatch(actionsForPackPagination.setPackPage(val))\r\n    }\r\n    const setPackPageCount = (val: number) => {\r\n        dispatch(actionsForPackPagination.setPackPageCount(val))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPack({\r\n            pageCount: pageCount,\r\n            page: currentPage,\r\n            user_id: flagForMyPack ? userId : undefined,\r\n            sortPacks: flagSortData ? flagSortValueData : undefined,\r\n            min: sortFlag ? minRange : undefined,\r\n            max: sortFlag ? maxRange : undefined\r\n        }))\r\n    }, [currentPage, pageCount, flagForMyPack, flagSortData, flagSortValueData, sortFlag, minRange, maxRange])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.TEST_LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            {status === 'loading' && <Preloader/>}\r\n            <Pack\r\n                cardPacksTotalCount={cardPacksTotalCount}\r\n                pageCount={pageCount}\r\n                currentPage={currentPage}\r\n                setPackPageCount={setPackPageCount}\r\n                setPackPage={setPackPage}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Dispatch} from \"redux\";\r\nimport style from \"./App.module.scss\";\r\nimport {Login} from \"../components/v2-Login/Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {initializeApp} from \"./appReducer\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\nimport {PacksPage} from \"../components/v8-PacksPage/PacksPage\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const isInitialized = useSelector<AppRootStateType, boolean>(state => state.app.isInitialized);\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            {!isInitialized && <Preloader/>}\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Login/>}/>\r\n                <Route exact path={PATH.TEST_LOGIN} render={() => <Login/>}/>\r\n                <Route exact path={PATH.TEST_PACK} render={() => <PacksPage/>}/>\r\n                <Redirect from={'*'} to={PATH.TEST_PAGE404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\nexport const PATH = {\r\n    TEST_LOGIN: '/login',\r\n    TEST_PAGE404: '/page404',\r\n    TEST_PACK: '/pack'\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\nimport App from \"./app/App\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter >\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}